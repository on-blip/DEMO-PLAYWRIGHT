name: Playwright Tests & Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test tests/

      # ✅ HTML Report natif Playwright en artifact
      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # ✅ Artifacts (screenshots, videos, traces)
      - name: Upload test results (videos, screenshots, traces)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts
          path: test-results/
          retention-days: 30

      # ✅ Installer Allure CLI
      - name: Install Allure Commandline
        run: npm install -g allure-commandline

      # ✅ Générer Allure Report dans ./allure-report
      - name: Generate Allure Report
        if: always()
        run: |
          npx allure generate allure-results --clean -o ./allure-report
          touch ./allure-report/.nojekyll

      # ✅ Uploader Allure Report comme artifact Pages
      - name: Upload artifact for GitHub Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
